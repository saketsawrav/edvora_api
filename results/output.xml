<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.6 on linux)" generated="20220819 02:13:49.746" rpa="false" schemaversion="3">
<suite id="s1" name="Edvora unit test" source="/home/lelouch/Documents/neogcamp/EdvoraAPITest/Edvora_unit_test.robot">
<test id="s1-t1" name="Check whether First name accepts Integer" line="27">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_first_name}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:13:50.245" endtime="20220819 02:13:57.400"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>422</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<msg timestamp="20220819 02:13:57.405" level="FAIL">200 is not one of [422]

Failed validating 'enum' in schema:
    {'enum': [422], 'type': 'integer'}

On instance:
    200</msg>
<status status="FAIL" starttime="20220819 02:13:57.400" endtime="20220819 02:13:57.407"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/first_name_integer.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:13:57.409" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:13:57.408" endtime="20220819 02:13:57.418"/>
</kw>
<doc>Test to check whether First Name accepts Integer as a data type.Expected Behaviour: Integer should not be accepted and user should not be created.</doc>
<tag>Unit</tag>
<status status="FAIL" starttime="20220819 02:13:50.243" endtime="20220819 02:13:57.418">200 is not one of [422]

Failed validating 'enum' in schema:
    {'enum': [422], 'type': 'integer'}

On instance:
    200</status>
</test>
<test id="s1-t2" name="Check whether Last name accepts Integer" line="35">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_last_name}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:13:57.420" endtime="20220819 02:13:59.239"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>422</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<msg timestamp="20220819 02:13:59.243" level="FAIL">200 is not one of [422]

Failed validating 'enum' in schema:
    {'enum': [422], 'type': 'integer'}

On instance:
    200</msg>
<status status="FAIL" starttime="20220819 02:13:59.239" endtime="20220819 02:13:59.243"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/last_name_integer.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:13:59.245" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:13:59.244" endtime="20220819 02:13:59.246"/>
</kw>
<doc>Test to check whether Last Name accepts Integer data type.Expected Behaviour: Integer should not be accepted and user should not be created.</doc>
<tag>Unit</tag>
<status status="FAIL" starttime="20220819 02:13:57.419" endtime="20220819 02:13:59.246">200 is not one of [422]

Failed validating 'enum' in schema:
    {'enum': [422], 'type': 'integer'}

On instance:
    200</status>
</test>
<test id="s1-t3" name="Check whether First name accepts Strings" line="42">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:13:59.249" endtime="20220819 02:14:01.185"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:01.186" endtime="20220819 02:14:01.189"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/first_name_string.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:01.190" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:01.189" endtime="20220819 02:14:01.191"/>
</kw>
<doc>Test to check whether First Name accepts Strings data type.Expected Behaviour: Stings should be accepted and user should be created.</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:13:59.247" endtime="20220819 02:14:01.191"/>
</test>
<test id="s1-t4" name="Check whether Last name accepts String" line="49">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:01.193" endtime="20220819 02:14:02.951"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:02.952" endtime="20220819 02:14:02.967"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/last_name_string.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:02.970" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:02.969" endtime="20220819 02:14:02.971"/>
</kw>
<doc>Test to check whether Last Name accepts String data type.Expected Behaviour: Given String should be accepted and user should be created.</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:01.191" endtime="20220819 02:14:02.972"/>
</test>
<test id="s1-t5" name="Check if username accepts one UpperCase letter,one symbol &amp; one number &amp; between 8-15 Characters" line="56">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:02.976" endtime="20220819 02:14:04.741"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:04.741" endtime="20220819 02:14:04.744"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/username.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:04.745" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:04.745" endtime="20220819 02:14:04.746"/>
</kw>
<doc>Expected Behaviour: The test should pass and data should be submitted successfully with response code 200</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:02.973" endtime="20220819 02:14:04.746"/>
</test>
<test id="s1-t6" name="Check if username does not accept alphanumerical or just number as a value." line="63">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_username_alpha}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:04.748" endtime="20220819 02:14:07.399"/>
</kw>
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_username_num}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:07.399" endtime="20220819 02:14:09.923"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>422</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:09.923" endtime="20220819 02:14:09.926"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/username_negative.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:09.927" level="INFO">
{
    "detail": [
        {
            "loc": [
                "body",
                "username"
            ],
            "msg": "username must satisfy one Uppercase letter, one lowercase letter, One Numberic letter, One special symbol, length should be atleast 8 and less then 15",
            "type": "value_error"
        }
    ]
}</msg>
<status status="PASS" starttime="20220819 02:14:09.926" endtime="20220819 02:14:09.928"/>
</kw>
<doc>Expected Behaviour: The test should pass but data should not be submitted and a response code 422("username must satisfy one Uppercase letter, one lowercase letter, One Numberic letter, One special symbol, length should be atleast 8 and less then 15")</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:04.747" endtime="20220819 02:14:09.929"/>
</test>
<test id="s1-t7" name="Check if age accepts Integer as a value." line="71">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:09.931" endtime="20220819 02:14:11.732"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:11.733" endtime="20220819 02:14:11.736"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/age_positive.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:11.737" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:11.736" endtime="20220819 02:14:11.738"/>
</kw>
<doc>Expected Behaviour: The test should pass with 200(with the message "user created successfully") as a response code</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:09.929" endtime="20220819 02:14:11.738"/>
</test>
<test id="s1-t8" name="Check if age does not accept String as a value." line="78">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_age}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:11.740" endtime="20220819 02:14:13.576"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>422</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:13.576" endtime="20220819 02:14:13.579"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/age_negative.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:13.580" level="INFO">
{
    "detail": [
        {
            "loc": [
                "body",
                "age"
            ],
            "msg": "value is not a valid integer",
            "type": "type_error.integer"
        }
    ]
}</msg>
<status status="PASS" starttime="20220819 02:14:13.579" endtime="20220819 02:14:13.581"/>
</kw>
<doc>Expected Behaviour: A response code of 422 with the message ("value is not a valid integer")</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:11.739" endtime="20220819 02:14:13.581"/>
</test>
<test id="s1-t9" name="Check if date of birth accepts Integer as a value." line="85">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:13.583" endtime="20220819 02:14:15.726"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:15.726" endtime="20220819 02:14:15.729"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/dob_positive.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:15.730" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:15.729" endtime="20220819 02:14:15.730"/>
</kw>
<doc>Expected Behaviour: The test should pass with 200(with the message "user created successfully") as a response code</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:13.582" endtime="20220819 02:14:15.731"/>
</test>
<test id="s1-t10" name="Check if dob does not accept alphanumerical Characters as a value." line="93">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_dob}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:15.732" endtime="20220819 02:14:17.671"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>422</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:17.672" endtime="20220819 02:14:17.676"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/dob_negative.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:17.677" level="INFO">
{
    "detail": [
        {
            "loc": [
                "body",
                "date_of_birth"
            ],
            "msg": "value is not a valid integer",
            "type": "type_error.integer"
        }
    ]
}</msg>
<status status="PASS" starttime="20220819 02:14:17.676" endtime="20220819 02:14:17.678"/>
</kw>
<doc>Expected Behaviour: A response code of 422 with the message ("value is not a valid integer")</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:15.731" endtime="20220819 02:14:17.678"/>
</test>
<test id="s1-t11" name="Check if a valid email address is accepted in the email field" line="100">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:17.680" endtime="20220819 02:14:19.719"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:19.719" endtime="20220819 02:14:19.722"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/email_positive.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:19.723" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:19.723" endtime="20220819 02:14:19.724"/>
</kw>
<doc>Expected Behaviour: The test should pass with 200(with the message "user created successfully") as a response code</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:17.679" endtime="20220819 02:14:19.724"/>
</test>
<test id="s1-t12" name="Check if an invalid email address format is not accepted in the email field" line="107">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_email}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:19.726" endtime="20220819 02:14:21.562"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>422</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:21.562" endtime="20220819 02:14:21.565"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/email_negative.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:21.566" level="INFO">
{
    "detail": [
        {
            "loc": [
                "body",
                "email"
            ],
            "msg": "Email is not valid",
            "type": "value_error"
        }
    ]
}</msg>
<status status="PASS" starttime="20220819 02:14:21.565" endtime="20220819 02:14:21.567"/>
</kw>
<doc>Expected Behaviour: A response code of 422 with the message ("Email is not valid")</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:19.725" endtime="20220819 02:14:21.567"/>
</test>
<test id="s1-t13" name="Check if married field accepts boolean" line="114">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:21.569" endtime="20220819 02:14:23.406"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:23.406" endtime="20220819 02:14:23.409"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/married_positive.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:23.410" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:23.409" endtime="20220819 02:14:23.417"/>
</kw>
<doc>Expected Behaviour: The test should pass with 200(with the message "user created successfully") as a response code</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:21.568" endtime="20220819 02:14:23.417"/>
</test>
<test id="s1-t14" name="Check if married field does not accept any other values" line="121">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_married}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:23.419" endtime="20220819 02:14:25.351"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>422</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:25.352" endtime="20220819 02:14:25.355"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/married_negative.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:25.356" level="INFO">
{
    "detail": [
        {
            "loc": [
                "body",
                "married"
            ],
            "msg": "value could not be parsed to a boolean",
            "type": "type_error.bool"
        }
    ]
}</msg>
<status status="PASS" starttime="20220819 02:14:25.355" endtime="20220819 02:14:25.357"/>
</kw>
<doc>Expected Behaviour: A response code of 422 with the message ("value could not be parsed to a boolean")</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:23.418" endtime="20220819 02:14:25.358"/>
</test>
<test id="s1-t15" name="Check if attributes value are passed" line="128">
<kw name="POST" library="REST">
<arg>/</arg>
<arg>${json_full}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220819 02:14:25.360" endtime="20220819 02:14:27.297"/>
</kw>
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220819 02:14:27.298" endtime="20220819 02:14:27.300"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/attributes_positive.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220819 02:14:27.302" level="INFO">
{
    "message": "user created successfully"
}</msg>
<status status="PASS" starttime="20220819 02:14:27.301" endtime="20220819 02:14:27.302"/>
</kw>
<doc>Expected Behaviour: The test should pass with 200(with the message "user created successfully") as a response code</doc>
<tag>Unit</tag>
<status status="PASS" starttime="20220819 02:14:25.359" endtime="20220819 02:14:27.302"/>
</test>
<doc>Unit Testing Edvora</doc>
<status status="FAIL" starttime="20220819 02:13:49.747" endtime="20220819 02:14:27.304"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="13" fail="2" skip="0">Unit</stat>
</tag>
<suite>
<stat pass="13" fail="2" skip="0" id="s1" name="Edvora unit test">Edvora unit test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
